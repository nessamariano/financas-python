# -*- coding: utf-8 -*-
"""explore -investpy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A_8wtnxINJFOSiwwjw8YF8GrDQ6x56T0
"""

!pip install investpy
!pip install yfinance

#Importando as bibliotecas
import pandas as pd
import numpy as np
from datetime import datetime
import yfinance as yf
import matplotlib.pyplot as plt
import investpy as inv

plt.style.use('fivethirtyeight')
#https://matplotlib.org/stable/gallery/style_sheets/fivethirtyeight.html

stocks_br = inv.get_stocks_overview(country = 'Brazil',
                                    as_json = False,
                                    n_results = 100)

stocks_br

ticker = 'WEGE3' # a lib não aceita um vetor com mais ações como entrada

#Descrição da ação

stock_desc = inv.get_stock_company_profile(stock = ticker,
                                           country = 'Brazil')

stock_desc

help(inv.get_stock_financial_summary)

#Análise Fundamentalista
#Informações de receita

wege_revenue_quart = inv.get_stock_financial_summary(stock = ticker,
                                               country = 'Brazil',
                                               summary_type='income_statement',
                                               period = 'quarterly')

wege_revenue_quart

plt.figure(figsize=(12,4))
plt.plot(wege_revenue_quart['Total Revenue'], label = 'WEGE3', linewidth = 2, color = 'blue')
plt.title('Receita Total: WEGE3 - Investing.com')
plt.xlabel('Ultimos 4 trimestres')
plt.ylabel('Receita em $')
plt.legend(loc = 'lower right')
plt.show()

wege_revenue_Annual = inv.get_stock_financial_summary(stock = ticker,
                                               country = 'Brazil',
                                               summary_type='income_statement',
                                               period = 'annual')

wege_revenue_Annual

plt.figure(figsize=(12,4))
plt.plot(wege_revenue_Annual['Total Revenue'], label = 'WEGE3', linewidth = 2, color = 'blue')
plt.title('Receita Total: WEGE3 - Investing.com')
plt.xlabel('Ultimos 4 anos')
plt.ylabel('Receita em $')
plt.legend(loc = 'lower right')
plt.show()

#cash
wege_revenue_cash = inv.get_stock_financial_summary(stock = ticker,
                                               country = 'Brazil',
                                               summary_type='cash_flow_statement',
                                               period = 'quarterly')

wege_revenue_cash

plt.figure(figsize=(12,4))
plt.plot(wege_revenue_cash['Net Change in Cash'], label = 'WEGE3', linewidth = 2, color = 'blue')
plt.title('Net Change in Cash: WEGE3 - Investing.com')
plt.xlabel('Ultimos 4 trimestres')
plt.ylabel('Receita em $')
plt.legend(loc = 'lower right')
plt.show()

#balance
wege_revenue_balance = inv.get_stock_financial_summary(stock = ticker,
                                               country = 'Brazil',
                                               summary_type='balance_sheet',
                                               period = 'quarterly')

wege_revenue_balance

plt.figure(figsize=(12,4))
plt.plot(wege_revenue_balance['Total Equity'], label = 'WEGE3', linewidth = 2, color = 'blue')
plt.title('Total Equity: WEGE3 - Investing.com')
plt.xlabel('Ultimos 4 trimestres')
plt.ylabel('Receita em $')
plt.legend(loc = 'lower right')
plt.show()

#evo_weg_revenue =  [wege_revenue['Total Revenue'],wege_revenue['Gross Profit'],wege_revenue['Operating Income'], wege_revenue['Net Income']]

#plt.figure(figsize=(12,4))
#plt.plot(evo_weg_revenue, label = 'Total Revenue', linewidth = 2, color = 'blue')
#plt.title('Receita Total: WEGE3 - Investing.com')
#plt.xlabel('Ultimos 4 trimestres')
#plt.ylabel('Receita em $')
#plt.legend(loc = 'lower right')
#plt.show()

wege_revenue = inv.get_stock_financial_summary(stock = ticker,
                                               country = 'Brazil',
                                               summary_type='balance_sheet',
                                               period = 'quarterly')

wege_revenue

#Sumário da ação
help(inv.get_stock_information)

wege_inf = inv.get_stock_information(stock=ticker,
                                     country = 'Brazil',
                                     as_json = False).transpose()
wege_inf
#usei o método transpose() para melhor transformar coluna em linha e melhorar a visualização

wege_inf = inv.get_stock_information(stock=ticker,
                                     country = 'Brazil',
                                     as_json = False)
wege_inf
#sem o transpose()

#Fazer um laço for para interagir com stock symbol e armazenar um um dataframe
#acho que passa por uma lista com os tickers e depois fazer um merge com o index por stock symbol

#Analisando o histórico da ação
help(inv.get_stock_historical_data)

#Vamos fazer a análise diária = 'daily', mas pode ser feita 'weekley' ou 'mounth'
start = '01/01/2020'
finish = '07/08/2022'

weg_hist_data = inv.get_stock_historical_data(stock = ticker,
                                              country = 'Brazil',
                                              from_date = start,
                                              to_date = finish,
                                              as_json=False, 
                                              order='ascending',
                                              interval='Daily')

weg_hist_data

plt.figure(figsize=(12,4))
plt.plot(weg_hist_data['Close'], label = 'WEGE3', linewidth = 2, color = 'blue')
plt.title('Cotação: WEGE3 - Investing.com')
plt.xlabel('2020 a 2022')
plt.ylabel('Cotação em R$')
plt.legend(loc = 'lower right')
plt.show()

#Indicadores técnicos
help(inv.search_quotes)

weg_ind = inv.search_quotes(text = ticker,
                            products = ['stocks'],
                            countries = ['brazil'],
                            n_results = 1)

print(weg_ind)

#Usando o método retrieve_technical_indicators
#Renomear todos os indicadores para PT-BR
#Diário

weg_ind_d1 = weg_ind.retrieve_technical_indicators(interval='daily')

weg_ind_d1
#

#Semanal

weg_ind_d7 = weg_ind.retrieve_technical_indicators(interval='weekly')

weg_ind_d7

#Mensal

weg_ind_d30 = weg_ind.retrieve_technical_indicators(interval='monthly')

weg_ind_d30

#Criando um DataFrame com os diferentes timeframes em uma única tabela

wege_at = pd.DataFrame([weg_ind_d1['indicator'], weg_ind_d1['value'],
                        weg_ind_d7['value'], weg_ind_d30['value']]).transpose()
#wege_at
wege_at.set_axis(['Indicador', 'D1', 'Semanal', 'Mensal'], axis=1, inplace=True)
#wege_at
wege_at.set_index(wege_at['Indicador'], drop = True, inplace=True)
wege_at

#Selecionando apenas os indicadores de momentum

wege_momentum = wege_at.iloc[[0,4,5,6], :].copy()
wege_momentum

wege_momentum.plot(kind = 'bar',
                   title='Indicadores de Momentum de WEGE3',
                   figsize = (12,7))
plt.ylabel('Valor do indicador')
plt.ylim(-120,100)
plt.legend(loc = 'upper right')
plt.show()



























